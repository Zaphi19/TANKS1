<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{6B45AF18-48D8-3420-8EF1-84E474FD25C9}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/TANKS/src/OpenGL-Template-master/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/TANKS/src/OpenGL-Template-master -BC:/TANKS/bin --check-stamp-file C:/TANKS/bin/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.31\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.31\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\WriteBasicConfigVersionFile.cmake;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\cmake_uninstall.cmake.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\docs\Doxyfile.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw3.pc.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw3Config.cmake.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\TANKS\bin\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/TANKS/src/OpenGL-Template-master/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/TANKS/src/OpenGL-Template-master -BC:/TANKS/bin --check-stamp-file C:/TANKS/bin/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.31\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.31\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\WriteBasicConfigVersionFile.cmake;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\cmake_uninstall.cmake.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\docs\Doxyfile.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw3.pc.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw3Config.cmake.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\TANKS\bin\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/TANKS/src/OpenGL-Template-master/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/TANKS/src/OpenGL-Template-master -BC:/TANKS/bin --check-stamp-file C:/TANKS/bin/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.31\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.31\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\WriteBasicConfigVersionFile.cmake;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\cmake_uninstall.cmake.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\docs\Doxyfile.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw3.pc.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw3Config.cmake.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\TANKS\bin\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/TANKS/src/OpenGL-Template-master/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/TANKS/src/OpenGL-Template-master -BC:/TANKS/bin --check-stamp-file C:/TANKS/bin/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.31\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.31\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.31\Modules\WriteBasicConfigVersionFile.cmake;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\cmake_uninstall.cmake.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\docs\Doxyfile.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw3.pc.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw3Config.cmake.in;C:\TANKS\src\OpenGL-Template-master\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\TANKS\bin\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <ProjectReference Include="C:\TANKS\bin\ZERO_CHECK.vcxproj">
      <Project>{308BA621-B5BB-338A-8246-170CA1705E7D}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\examples\boing.vcxproj">
      <Project>{42178BC9-2070-35F8-84A3-2B08D871B9C9}</Project>
      <Name>boing</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\clipboard.vcxproj">
      <Project>{D5E414BE-62AA-3C2C-9CAA-FAB284EB10F3}</Project>
      <Name>clipboard</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\cursor.vcxproj">
      <Project>{74AC96C0-83F6-3F5A-BCD7-C6669BDF8D8C}</Project>
      <Name>cursor</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\empty.vcxproj">
      <Project>{6647C731-4C7D-394D-A1FB-43340FD75333}</Project>
      <Name>empty</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\events.vcxproj">
      <Project>{D2062589-5993-3B35-8B55-BCDB6A10FD80}</Project>
      <Name>events</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\gamma.vcxproj">
      <Project>{047522FF-BDBC-39A9-BC4E-005FC98C2B8A}</Project>
      <Name>gamma</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\examples\gears.vcxproj">
      <Project>{16CFCC0C-0D4D-3E51-AE95-9EA098AC80D1}</Project>
      <Name>gears</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\src\glfw.vcxproj">
      <Project>{49F5882B-43DC-303D-A86D-4A489368095F}</Project>
      <Name>glfw</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\glfwinfo.vcxproj">
      <Project>{2B346A09-AC5A-3895-BA83-EE5BADFF1203}</Project>
      <Name>glfwinfo</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\examples\heightmap.vcxproj">
      <Project>{CA595A27-2D79-35EF-BCDA-58FFBB803E15}</Project>
      <Name>heightmap</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\iconify.vcxproj">
      <Project>{10DF48AC-1BA4-3B71-AD61-2264886DF3DB}</Project>
      <Name>iconify</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\joysticks.vcxproj">
      <Project>{A415B2E7-AFD7-3E33-B296-EC2FA15D754C}</Project>
      <Name>joysticks</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\monitors.vcxproj">
      <Project>{184CAD50-8173-3EB3-8D42-07E5D16F3333}</Project>
      <Name>monitors</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\msaa.vcxproj">
      <Project>{5D02F63D-32B0-39CD-94CA-CE80BA3DC6C7}</Project>
      <Name>msaa</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\examples\particles.vcxproj">
      <Project>{4F26579E-7D9C-3CDD-8EB2-D9DD4608528E}</Project>
      <Name>particles</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\reopen.vcxproj">
      <Project>{85304A91-B32F-3EC7-B2AB-85C3F86059E0}</Project>
      <Name>reopen</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\sharing.vcxproj">
      <Project>{43644B35-5648-39FC-BE2A-75FAABC918AD}</Project>
      <Name>sharing</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\examples\simple.vcxproj">
      <Project>{8BBF2E73-B7BB-3C29-B828-B09A62C43BD5}</Project>
      <Name>simple</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\examples\splitview.vcxproj">
      <Project>{F22EE972-8B7F-3756-B27E-9A878F29DD15}</Project>
      <Name>splitview</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\tearing.vcxproj">
      <Project>{F19505F1-30F0-3834-9A76-E769A6099EBB}</Project>
      <Name>tearing</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\threads.vcxproj">
      <Project>{537752B2-AEE2-3A18-9AFC-27600110B273}</Project>
      <Name>threads</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\title.vcxproj">
      <Project>{38082005-4C2D-35EF-A7C3-57782579FD72}</Project>
      <Name>title</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\examples\wave.vcxproj">
      <Project>{EA6B416E-4991-34AD-A35E-1E58B38BCFA0}</Project>
      <Name>wave</Name>
    </ProjectReference>
    <ProjectReference Include="C:\TANKS\bin\external\glfw-3.1.2\tests\windows.vcxproj">
      <Project>{6687182A-1144-3D00-ADC1-51BB01EB0B59}</Project>
      <Name>windows</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>